package resourceManager.controller;

import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.client.RestTemplate;

@Controller
public class ProductController {
	@RequestMapping(value="/create", method = RequestMethod.POST)
	public Map<String, String> create(HttpServletRequest req, HttpServletResponse res) {
		
		//validate auth token
		

	    final String uri = req.getParameter("eventUrl");
	     
	    RestTemplate restTemplate = new RestTemplate();
	     
	    HttpHeaders headers = new HttpHeaders();
	    headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
	    HttpEntity<String> entity = new HttpEntity<String>("parameters", headers);
	     
	    ResponseEntity<String> result = restTemplate.exchange(uri, HttpMethod.GET, entity, String.class);
	    
	    //details about the subscription event
	    /*
	     *	type, marketplace, creator, order, company 
	     */
	    System.out.println(result);
	    
	    String userKey = "autogeneratedkey"+System.currentTimeMillis();
	    
	    //store userKey in db for further usage
	    
	    // to return 
	    Map<String, String> resultMap = new HashMap<String, String>();
	    resultMap.put("success", "true");
	    resultMap.put("accountIdentifier", userKey);
	    resultMap.put("message", "user created successfully");
	    
	    //add oauth details
	    
	    
	    return resultMap;
	    
 
	}
	
	
	@RequestMapping(value="/cancel", method = RequestMethod.POST)
	public Map<String, String> cancel(HttpServletRequest req, HttpServletResponse res) {
			

	    final String uri = req.getParameter("eventUrl");
	     
	    RestTemplate restTemplate = new RestTemplate();
	     
	    HttpHeaders headers = new HttpHeaders();
	    headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
	    HttpEntity<String> entity = new HttpEntity<String>("parameters", headers);
	     
	    ResponseEntity<String> result = restTemplate.exchange(uri, HttpMethod.GET, entity, String.class);
	    
	    //details about the subscription event
	    /*
	     *	type, marketplace, creator, account 
	     */
	    System.out.println(result);
	    
	    
	    // to return 
	    Map<String, String> resultMap = new HashMap<String, String>();
	    resultMap.put("success", "true");
	    resultMap.put("message", "user subscription canceled successfully");
	    return resultMap;
	    
 
	}
	
	@RequestMapping(value="/change", method = RequestMethod.POST)
	public Map<String, String> change(HttpServletRequest req, HttpServletResponse res) {
			

	    final String uri = req.getParameter("eventUrl");
	     
	    RestTemplate restTemplate = new RestTemplate();
	     
	    HttpHeaders headers = new HttpHeaders();
	    headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
	    HttpEntity<String> entity = new HttpEntity<String>("parameters", headers);
	     
	    ResponseEntity<String> result = restTemplate.exchange(uri, HttpMethod.GET, entity, String.class);
	    
	    //details about the subscription event
	    /*
	     *	type, marketplace, creator, order, account 
	     */
	    System.out.println(result);
	    
	    
	    // to return 
	    Map<String, String> resultMap = new HashMap<String, String>();
	    resultMap.put("success", "true");
	    resultMap.put("message", "user subscription changed successfully");
	    return resultMap;
	    
 
	}
	
	@RequestMapping(value="/notice", method = RequestMethod.POST)
	public Map<String, String> notice(HttpServletRequest req, HttpServletResponse res) {
			

	    final String uri = req.getParameter("eventUrl");
	     
	    RestTemplate restTemplate = new RestTemplate();
	     
	    HttpHeaders headers = new HttpHeaders();
	    headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
	    HttpEntity<String> entity = new HttpEntity<String>("parameters", headers);
	     
	    ResponseEntity<String> result = restTemplate.exchange(uri, HttpMethod.GET, entity, String.class);
	    
	    //details about the subscription event
	    /*
	     *	type, marketplace, notice, account 
	     */
	    System.out.println(result);
	    
	    
	    // to return 
	    Map<String, String> resultMap = new HashMap<String, String>();
	    resultMap.put("success", "true");
	    resultMap.put("message", "user status fetched successfully");
	    return resultMap;
	    
 
	}
	@RequestMapping(value="/assignment", method = RequestMethod.POST)
	public Map<String, String> assignment(HttpServletRequest req, HttpServletResponse res) {
			

	    final String uri = req.getParameter("eventUrl");
	     
	    RestTemplate restTemplate = new RestTemplate();
	     
	    HttpHeaders headers = new HttpHeaders();
	    headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
	    HttpEntity<String> entity = new HttpEntity<String>("parameters", headers);
	     
	    ResponseEntity<String> result = restTemplate.exchange(uri, HttpMethod.GET, entity, String.class);
	    
	    //details about the subscription event
	    /*
	     *	type, marketplace, user, attributes, accountIdentifier 
	     */
	    System.out.println(result);
	    
	    
	    // to return 
	    Map<String, String> resultMap = new HashMap<String, String>();
	    resultMap.put("success", "true");
	    resultMap.put("message", "user assigned successfully changed");
	    return resultMap;
	    
 
	}
	@RequestMapping(value="/unassignment", method = RequestMethod.POST)
	public Map<String, String> unassignment(HttpServletRequest req, HttpServletResponse res) {
			

	    final String uri = req.getParameter("eventUrl");
	     
	    RestTemplate restTemplate = new RestTemplate();
	     
	    HttpHeaders headers = new HttpHeaders();
	    headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
	    HttpEntity<String> entity = new HttpEntity<String>("parameters", headers);
	     
	    ResponseEntity<String> result = restTemplate.exchange(uri, HttpMethod.GET, entity, String.class);
	    
	    //details about the subscription event
	    /*
	     *	type, marketplace, user, attributes, accountIdentifier 
	     */
	    System.out.println(result);
	    
	    
	    // to return 
	    Map<String, String> resultMap = new HashMap<String, String>();
	    resultMap.put("success", "true");
	    resultMap.put("message", "user unassigned from existing subscription");
	    return resultMap;
	    
 
	}
}
